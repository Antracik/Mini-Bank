// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Mini_Bank.Migrations
{
    [DbContext(typeof(BankContext))]
    [Migration("20201004143722_AddMissingNomenclatures")]
    partial class AddMissingNomenclatures
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Data.Entities.AccountEntityModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountStatusId")
                        .HasColumnName("StatusId");

                    b.Property<decimal>("Balance")
                        .HasColumnType("money");

                    b.Property<int?>("CreatedById");

                    b.Property<int>("CurrencyId")
                        .HasColumnName("CurrencyId");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateEdited");

                    b.Property<int?>("EditedById");

                    b.Property<string>("IBAN")
                        .IsRequired();

                    b.Property<int>("WalletId")
                        .HasColumnName("WalletId");

                    b.HasKey("Id");

                    b.HasIndex("AccountStatusId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("EditedById");

                    b.HasIndex("WalletId");

                    b.ToTable("Account");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccountStatusId = 1,
                            Balance = 0m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(1151),
                            IBAN = "BG27TTBB94008486163628",
                            WalletId = 1
                        },
                        new
                        {
                            Id = 2,
                            AccountStatusId = 2,
                            Balance = 0m,
                            CurrencyId = 3,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(2034),
                            IBAN = "BG77TTBB94006739924496",
                            WalletId = 1
                        },
                        new
                        {
                            Id = 3,
                            AccountStatusId = 1,
                            Balance = 0m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(2057),
                            IBAN = "BG82BNPA94402678339673",
                            WalletId = 1
                        },
                        new
                        {
                            Id = 4,
                            AccountStatusId = 1,
                            Balance = 0m,
                            CurrencyId = 3,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(2063),
                            IBAN = "BG11TTBB94009636993256",
                            WalletId = 2
                        },
                        new
                        {
                            Id = 5,
                            AccountStatusId = 1,
                            Balance = 0m,
                            CurrencyId = 2,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(2069),
                            IBAN = "BG84IORT80944383911889",
                            WalletId = 2
                        },
                        new
                        {
                            Id = 6,
                            AccountStatusId = 2,
                            Balance = 0m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(2074),
                            IBAN = "BG30STSA93001743638279",
                            WalletId = 2
                        },
                        new
                        {
                            Id = 7,
                            AccountStatusId = 1,
                            Balance = 0m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(2079),
                            IBAN = "BG61TTBB94002569752388",
                            WalletId = 3
                        },
                        new
                        {
                            Id = 8,
                            AccountStatusId = 1,
                            Balance = 0m,
                            CurrencyId = 3,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(2084),
                            IBAN = "BG79BNPA94401326493795",
                            WalletId = 3
                        },
                        new
                        {
                            Id = 9,
                            AccountStatusId = 1,
                            Balance = 0m,
                            CurrencyId = 2,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(2091),
                            IBAN = "BG71BNPA94403364212612",
                            WalletId = 3
                        },
                        new
                        {
                            Id = 10,
                            AccountStatusId = 1,
                            Balance = 0m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(2096),
                            IBAN = "BE98798249248593",
                            WalletId = 4
                        },
                        new
                        {
                            Id = 11,
                            AccountStatusId = 2,
                            Balance = 0m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(2101),
                            IBAN = "BE39519894248419",
                            WalletId = 4
                        },
                        new
                        {
                            Id = 12,
                            AccountStatusId = 1,
                            Balance = 0m,
                            CurrencyId = 3,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(2106),
                            IBAN = "BE51999467219162",
                            WalletId = 4
                        },
                        new
                        {
                            Id = 13,
                            AccountStatusId = 1,
                            Balance = 0m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(2112),
                            IBAN = "BE27812249819173",
                            WalletId = 5
                        },
                        new
                        {
                            Id = 14,
                            AccountStatusId = 2,
                            Balance = 0m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(2117),
                            IBAN = "BE86549411157550",
                            WalletId = 5
                        },
                        new
                        {
                            Id = 15,
                            AccountStatusId = 2,
                            Balance = 0m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(2123),
                            IBAN = "BE45999614884989",
                            WalletId = 5
                        },
                        new
                        {
                            Id = 16,
                            AccountStatusId = 1,
                            Balance = 0m,
                            CurrencyId = 3,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(2128),
                            IBAN = "BE08735678488413",
                            WalletId = 6
                        },
                        new
                        {
                            Id = 17,
                            AccountStatusId = 1,
                            Balance = 0m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(2134),
                            IBAN = "BE80978224831777",
                            WalletId = 6
                        },
                        new
                        {
                            Id = 18,
                            AccountStatusId = 2,
                            Balance = 0m,
                            CurrencyId = 3,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(2139),
                            IBAN = "BE59549568634626",
                            WalletId = 6
                        },
                        new
                        {
                            Id = 19,
                            AccountStatusId = 1,
                            Balance = 0m,
                            CurrencyId = 3,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(2144),
                            IBAN = "DE73500105172747763277",
                            WalletId = 7
                        },
                        new
                        {
                            Id = 20,
                            AccountStatusId = 1,
                            Balance = 0m,
                            CurrencyId = 2,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(2150),
                            IBAN = "DE73500105175222722351",
                            WalletId = 7
                        },
                        new
                        {
                            Id = 21,
                            AccountStatusId = 1,
                            Balance = 0m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(2155),
                            IBAN = "DE19500105179421415465",
                            WalletId = 7
                        },
                        new
                        {
                            Id = 22,
                            AccountStatusId = 2,
                            Balance = 0m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(2160),
                            IBAN = "DE09500105171626724371",
                            WalletId = 8
                        },
                        new
                        {
                            Id = 23,
                            AccountStatusId = 1,
                            Balance = 0m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(2165),
                            IBAN = "DE85500105175574577219",
                            WalletId = 8
                        },
                        new
                        {
                            Id = 24,
                            AccountStatusId = 1,
                            Balance = 0m,
                            CurrencyId = 3,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(2240),
                            IBAN = "DE66500105177765152229",
                            WalletId = 8
                        },
                        new
                        {
                            Id = 25,
                            AccountStatusId = 1,
                            Balance = 0m,
                            CurrencyId = 2,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(2246),
                            IBAN = "DE69500105171238446744",
                            WalletId = 9
                        },
                        new
                        {
                            Id = 26,
                            AccountStatusId = 1,
                            Balance = 0m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(2251),
                            IBAN = "DE69500105171238446744",
                            WalletId = 9
                        },
                        new
                        {
                            Id = 27,
                            AccountStatusId = 1,
                            Balance = 0m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(2257),
                            IBAN = "DE42500105173178734641",
                            WalletId = 9
                        },
                        new
                        {
                            Id = 28,
                            AccountStatusId = 1,
                            Balance = 6502m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3367),
                            IBAN = "BG27TTBB94008486163628",
                            WalletId = 10
                        },
                        new
                        {
                            Id = 29,
                            AccountStatusId = 1,
                            Balance = 8693m,
                            CurrencyId = 3,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3404),
                            IBAN = "BG77TTBB94006739924496",
                            WalletId = 10
                        },
                        new
                        {
                            Id = 30,
                            AccountStatusId = 1,
                            Balance = 9304m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3411),
                            IBAN = "BG82BNPA94402678339673",
                            WalletId = 10
                        },
                        new
                        {
                            Id = 31,
                            AccountStatusId = 1,
                            Balance = 9509m,
                            CurrencyId = 3,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3417),
                            IBAN = "BG11TTBB94009636993256",
                            WalletId = 11
                        },
                        new
                        {
                            Id = 32,
                            AccountStatusId = 1,
                            Balance = 1600m,
                            CurrencyId = 2,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3424),
                            IBAN = "BG84IORT80944383911889",
                            WalletId = 11
                        },
                        new
                        {
                            Id = 33,
                            AccountStatusId = 1,
                            Balance = 7468m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3431),
                            IBAN = "BG30STSA93001743638279",
                            WalletId = 11
                        },
                        new
                        {
                            Id = 34,
                            AccountStatusId = 1,
                            Balance = 7746m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3437),
                            IBAN = "BG61TTBB94002569752388",
                            WalletId = 12
                        },
                        new
                        {
                            Id = 35,
                            AccountStatusId = 1,
                            Balance = 3847m,
                            CurrencyId = 3,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3443),
                            IBAN = "BG79BNPA94401326493795",
                            WalletId = 12
                        },
                        new
                        {
                            Id = 36,
                            AccountStatusId = 1,
                            Balance = 9744m,
                            CurrencyId = 2,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3449),
                            IBAN = "BG71BNPA94403364212612",
                            WalletId = 12
                        },
                        new
                        {
                            Id = 37,
                            AccountStatusId = 1,
                            Balance = 1648m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3455),
                            IBAN = "BE98798249248593",
                            WalletId = 13
                        },
                        new
                        {
                            Id = 38,
                            AccountStatusId = 1,
                            Balance = 9520m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3461),
                            IBAN = "BE39519894248419",
                            WalletId = 13
                        },
                        new
                        {
                            Id = 39,
                            AccountStatusId = 1,
                            Balance = 5938m,
                            CurrencyId = 3,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3467),
                            IBAN = "BE51999467219162",
                            WalletId = 13
                        },
                        new
                        {
                            Id = 40,
                            AccountStatusId = 1,
                            Balance = 4269m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3473),
                            IBAN = "BE27812249819173",
                            WalletId = 14
                        },
                        new
                        {
                            Id = 41,
                            AccountStatusId = 1,
                            Balance = 4374m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3479),
                            IBAN = "BE86549411157550",
                            WalletId = 14
                        },
                        new
                        {
                            Id = 42,
                            AccountStatusId = 1,
                            Balance = 2210m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3485),
                            IBAN = "BE45999614884989",
                            WalletId = 14
                        },
                        new
                        {
                            Id = 43,
                            AccountStatusId = 1,
                            Balance = 7089m,
                            CurrencyId = 3,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3491),
                            IBAN = "BE08735678488413",
                            WalletId = 15
                        },
                        new
                        {
                            Id = 44,
                            AccountStatusId = 1,
                            Balance = 6236m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3496),
                            IBAN = "BE80978224831777",
                            WalletId = 15
                        },
                        new
                        {
                            Id = 45,
                            AccountStatusId = 1,
                            Balance = 7390m,
                            CurrencyId = 3,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3503),
                            IBAN = "BE59549568634626",
                            WalletId = 15
                        },
                        new
                        {
                            Id = 46,
                            AccountStatusId = 1,
                            Balance = 3425m,
                            CurrencyId = 3,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3509),
                            IBAN = "DE73500105172747763277",
                            WalletId = 16
                        },
                        new
                        {
                            Id = 47,
                            AccountStatusId = 1,
                            Balance = 6800m,
                            CurrencyId = 2,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3515),
                            IBAN = "DE73500105175222722351",
                            WalletId = 16
                        },
                        new
                        {
                            Id = 48,
                            AccountStatusId = 1,
                            Balance = 4886m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3521),
                            IBAN = "DE19500105179421415465",
                            WalletId = 16
                        },
                        new
                        {
                            Id = 49,
                            AccountStatusId = 1,
                            Balance = 1197m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3527),
                            IBAN = "DE09500105171626724371",
                            WalletId = 17
                        },
                        new
                        {
                            Id = 50,
                            AccountStatusId = 1,
                            Balance = 3719m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3533),
                            IBAN = "DE85500105175574577219",
                            WalletId = 17
                        },
                        new
                        {
                            Id = 51,
                            AccountStatusId = 1,
                            Balance = 2319m,
                            CurrencyId = 3,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3539),
                            IBAN = "DE66500105177765152229",
                            WalletId = 17
                        },
                        new
                        {
                            Id = 52,
                            AccountStatusId = 1,
                            Balance = 4882m,
                            CurrencyId = 2,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3545),
                            IBAN = "DE69500105171238446744",
                            WalletId = 18
                        },
                        new
                        {
                            Id = 53,
                            AccountStatusId = 1,
                            Balance = 5078m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3550),
                            IBAN = "DE69500105171238446744",
                            WalletId = 18
                        },
                        new
                        {
                            Id = 54,
                            AccountStatusId = 1,
                            Balance = 5305m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3556),
                            IBAN = "DE42500105173178734641",
                            WalletId = 18
                        },
                        new
                        {
                            Id = 55,
                            AccountStatusId = 1,
                            Balance = 6727m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3562),
                            IBAN = "DE42500105173178734641",
                            WalletId = 19
                        },
                        new
                        {
                            Id = 56,
                            AccountStatusId = 1,
                            Balance = 5585m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3568),
                            IBAN = "DE42500105173178734641",
                            WalletId = 19
                        },
                        new
                        {
                            Id = 57,
                            AccountStatusId = 1,
                            Balance = 6992m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3575),
                            IBAN = "DE42500105173178734641",
                            WalletId = 19
                        },
                        new
                        {
                            Id = 58,
                            AccountStatusId = 1,
                            Balance = 2026m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3581),
                            IBAN = "DE42500105173178734641",
                            WalletId = 20
                        },
                        new
                        {
                            Id = 59,
                            AccountStatusId = 1,
                            Balance = 1041m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3587),
                            IBAN = "DE42500105173178734641",
                            WalletId = 20
                        },
                        new
                        {
                            Id = 60,
                            AccountStatusId = 1,
                            Balance = 7444m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3593),
                            IBAN = "DE42500105173178734641",
                            WalletId = 20
                        },
                        new
                        {
                            Id = 61,
                            AccountStatusId = 1,
                            Balance = 9157m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3599),
                            IBAN = "DE42500105173178734641",
                            WalletId = 21
                        },
                        new
                        {
                            Id = 62,
                            AccountStatusId = 1,
                            Balance = 1702m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3605),
                            IBAN = "DE42500105173178734641",
                            WalletId = 21
                        },
                        new
                        {
                            Id = 63,
                            AccountStatusId = 1,
                            Balance = 2098m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3611),
                            IBAN = "DE42500105173178734641",
                            WalletId = 21
                        },
                        new
                        {
                            Id = 64,
                            AccountStatusId = 1,
                            Balance = 4118m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3617),
                            IBAN = "DE42500105173178734641",
                            WalletId = 22
                        },
                        new
                        {
                            Id = 65,
                            AccountStatusId = 1,
                            Balance = 4065m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3623),
                            IBAN = "DE42500105173178734641",
                            WalletId = 22
                        },
                        new
                        {
                            Id = 66,
                            AccountStatusId = 1,
                            Balance = 6234m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3629),
                            IBAN = "DE42500105173178734641",
                            WalletId = 22
                        },
                        new
                        {
                            Id = 67,
                            AccountStatusId = 1,
                            Balance = 8171m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3635),
                            IBAN = "DE42500105173178734641",
                            WalletId = 23
                        },
                        new
                        {
                            Id = 68,
                            AccountStatusId = 1,
                            Balance = 1460m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3641),
                            IBAN = "DE42500105173178734641",
                            WalletId = 23
                        },
                        new
                        {
                            Id = 69,
                            AccountStatusId = 1,
                            Balance = 4923m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3648),
                            IBAN = "DE42500105173178734641",
                            WalletId = 23
                        },
                        new
                        {
                            Id = 70,
                            AccountStatusId = 1,
                            Balance = 6754m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3654),
                            IBAN = "DE42500105173178734641",
                            WalletId = 24
                        },
                        new
                        {
                            Id = 71,
                            AccountStatusId = 1,
                            Balance = 3638m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3660),
                            IBAN = "DE42500105173178734641",
                            WalletId = 24
                        },
                        new
                        {
                            Id = 72,
                            AccountStatusId = 1,
                            Balance = 8827m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3666),
                            IBAN = "DE42500105173178734641",
                            WalletId = 24
                        },
                        new
                        {
                            Id = 73,
                            AccountStatusId = 1,
                            Balance = 9954m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3671),
                            IBAN = "DE42500105173178734641",
                            WalletId = 25
                        },
                        new
                        {
                            Id = 74,
                            AccountStatusId = 1,
                            Balance = 5927m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3677),
                            IBAN = "DE42500105173178734641",
                            WalletId = 25
                        },
                        new
                        {
                            Id = 75,
                            AccountStatusId = 1,
                            Balance = 6144m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3683),
                            IBAN = "DE42500105173178734641",
                            WalletId = 25
                        },
                        new
                        {
                            Id = 76,
                            AccountStatusId = 1,
                            Balance = 383m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3689),
                            IBAN = "DE42500105173178734641",
                            WalletId = 26
                        },
                        new
                        {
                            Id = 77,
                            AccountStatusId = 1,
                            Balance = 3603m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3695),
                            IBAN = "DE42500105173178734641",
                            WalletId = 26
                        },
                        new
                        {
                            Id = 78,
                            AccountStatusId = 1,
                            Balance = 8573m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3700),
                            IBAN = "DE42500105173178734641",
                            WalletId = 26
                        },
                        new
                        {
                            Id = 79,
                            AccountStatusId = 1,
                            Balance = 1719m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3706),
                            IBAN = "DE42500105173178734641",
                            WalletId = 27
                        },
                        new
                        {
                            Id = 80,
                            AccountStatusId = 1,
                            Balance = 439m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3712),
                            IBAN = "DE42500105173178734641",
                            WalletId = 27
                        },
                        new
                        {
                            Id = 81,
                            AccountStatusId = 1,
                            Balance = 7871m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3718),
                            IBAN = "DE42500105173178734641",
                            WalletId = 27
                        },
                        new
                        {
                            Id = 82,
                            AccountStatusId = 1,
                            Balance = 738m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3724),
                            IBAN = "DE42500105173178734641",
                            WalletId = 28
                        },
                        new
                        {
                            Id = 83,
                            AccountStatusId = 1,
                            Balance = 5306m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3730),
                            IBAN = "DE42500105173178734641",
                            WalletId = 28
                        },
                        new
                        {
                            Id = 84,
                            AccountStatusId = 1,
                            Balance = 4975m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3814),
                            IBAN = "DE42500105173178734641",
                            WalletId = 28
                        },
                        new
                        {
                            Id = 85,
                            AccountStatusId = 1,
                            Balance = 6985m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3820),
                            IBAN = "DE42500105173178734641",
                            WalletId = 29
                        },
                        new
                        {
                            Id = 86,
                            AccountStatusId = 1,
                            Balance = 4627m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3827),
                            IBAN = "DE42500105173178734641",
                            WalletId = 29
                        },
                        new
                        {
                            Id = 87,
                            AccountStatusId = 1,
                            Balance = 6520m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3832),
                            IBAN = "DE42500105173178734641",
                            WalletId = 29
                        },
                        new
                        {
                            Id = 88,
                            AccountStatusId = 1,
                            Balance = 2163m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3839),
                            IBAN = "DE42500105173178734641",
                            WalletId = 30
                        },
                        new
                        {
                            Id = 89,
                            AccountStatusId = 1,
                            Balance = 1020m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3845),
                            IBAN = "DE42500105173178734641",
                            WalletId = 30
                        },
                        new
                        {
                            Id = 90,
                            AccountStatusId = 1,
                            Balance = 8260m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3851),
                            IBAN = "DE42500105173178734641",
                            WalletId = 30
                        },
                        new
                        {
                            Id = 91,
                            AccountStatusId = 1,
                            Balance = 2752m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3857),
                            IBAN = "DE42500105173178734641",
                            WalletId = 31
                        },
                        new
                        {
                            Id = 92,
                            AccountStatusId = 1,
                            Balance = 9620m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3863),
                            IBAN = "DE42500105173178734641",
                            WalletId = 31
                        },
                        new
                        {
                            Id = 93,
                            AccountStatusId = 1,
                            Balance = 8479m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3869),
                            IBAN = "DE42500105173178734641",
                            WalletId = 31
                        },
                        new
                        {
                            Id = 94,
                            AccountStatusId = 1,
                            Balance = 8493m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3876),
                            IBAN = "DE42500105173178734641",
                            WalletId = 32
                        },
                        new
                        {
                            Id = 95,
                            AccountStatusId = 1,
                            Balance = 5111m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3882),
                            IBAN = "DE42500105173178734641",
                            WalletId = 32
                        },
                        new
                        {
                            Id = 96,
                            AccountStatusId = 1,
                            Balance = 2673m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3887),
                            IBAN = "DE42500105173178734641",
                            WalletId = 32
                        },
                        new
                        {
                            Id = 97,
                            AccountStatusId = 1,
                            Balance = 112m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3893),
                            IBAN = "DE42500105173178734641",
                            WalletId = 33
                        },
                        new
                        {
                            Id = 98,
                            AccountStatusId = 1,
                            Balance = 2971m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3899),
                            IBAN = "DE42500105173178734641",
                            WalletId = 33
                        },
                        new
                        {
                            Id = 99,
                            AccountStatusId = 1,
                            Balance = 2171m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3905),
                            IBAN = "DE42500105173178734641",
                            WalletId = 33
                        },
                        new
                        {
                            Id = 100,
                            AccountStatusId = 1,
                            Balance = 1157m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3911),
                            IBAN = "DE42500105173178734641",
                            WalletId = 34
                        },
                        new
                        {
                            Id = 101,
                            AccountStatusId = 1,
                            Balance = 5253m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3917),
                            IBAN = "DE42500105173178734641",
                            WalletId = 34
                        },
                        new
                        {
                            Id = 102,
                            AccountStatusId = 1,
                            Balance = 5341m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3922),
                            IBAN = "DE42500105173178734641",
                            WalletId = 34
                        },
                        new
                        {
                            Id = 103,
                            AccountStatusId = 1,
                            Balance = 9961m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3928),
                            IBAN = "DE42500105173178734641",
                            WalletId = 35
                        },
                        new
                        {
                            Id = 104,
                            AccountStatusId = 1,
                            Balance = 4441m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3934),
                            IBAN = "DE42500105173178734641",
                            WalletId = 35
                        },
                        new
                        {
                            Id = 105,
                            AccountStatusId = 1,
                            Balance = 82m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3940),
                            IBAN = "DE42500105173178734641",
                            WalletId = 35
                        },
                        new
                        {
                            Id = 106,
                            AccountStatusId = 1,
                            Balance = 3490m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3947),
                            IBAN = "DE42500105173178734641",
                            WalletId = 36
                        },
                        new
                        {
                            Id = 107,
                            AccountStatusId = 1,
                            Balance = 4927m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3953),
                            IBAN = "DE42500105173178734641",
                            WalletId = 36
                        },
                        new
                        {
                            Id = 108,
                            AccountStatusId = 1,
                            Balance = 9150m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3959),
                            IBAN = "DE42500105173178734641",
                            WalletId = 36
                        },
                        new
                        {
                            Id = 109,
                            AccountStatusId = 1,
                            Balance = 9160m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3965),
                            IBAN = "DE42500105173178734641",
                            WalletId = 37
                        },
                        new
                        {
                            Id = 110,
                            AccountStatusId = 1,
                            Balance = 6344m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3971),
                            IBAN = "DE42500105173178734641",
                            WalletId = 37
                        },
                        new
                        {
                            Id = 111,
                            AccountStatusId = 1,
                            Balance = 1983m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3976),
                            IBAN = "DE42500105173178734641",
                            WalletId = 37
                        },
                        new
                        {
                            Id = 112,
                            AccountStatusId = 1,
                            Balance = 8418m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3982),
                            IBAN = "DE42500105173178734641",
                            WalletId = 38
                        },
                        new
                        {
                            Id = 113,
                            AccountStatusId = 1,
                            Balance = 308m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3988),
                            IBAN = "DE42500105173178734641",
                            WalletId = 38
                        },
                        new
                        {
                            Id = 114,
                            AccountStatusId = 1,
                            Balance = 603m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3994),
                            IBAN = "DE42500105173178734641",
                            WalletId = 38
                        },
                        new
                        {
                            Id = 115,
                            AccountStatusId = 1,
                            Balance = 9571m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(3999),
                            IBAN = "DE42500105173178734641",
                            WalletId = 39
                        },
                        new
                        {
                            Id = 116,
                            AccountStatusId = 1,
                            Balance = 8419m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(4005),
                            IBAN = "DE42500105173178734641",
                            WalletId = 39
                        },
                        new
                        {
                            Id = 117,
                            AccountStatusId = 1,
                            Balance = 6395m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(4011),
                            IBAN = "DE42500105173178734641",
                            WalletId = 39
                        },
                        new
                        {
                            Id = 118,
                            AccountStatusId = 1,
                            Balance = 7122m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(4017),
                            IBAN = "DE42500105173178734641",
                            WalletId = 40
                        },
                        new
                        {
                            Id = 119,
                            AccountStatusId = 1,
                            Balance = 7131m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(4023),
                            IBAN = "DE42500105173178734641",
                            WalletId = 40
                        },
                        new
                        {
                            Id = 120,
                            AccountStatusId = 1,
                            Balance = 9437m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(4029),
                            IBAN = "DE42500105173178734641",
                            WalletId = 40
                        },
                        new
                        {
                            Id = 121,
                            AccountStatusId = 1,
                            Balance = 9713m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(4035),
                            IBAN = "DE42500105173178734641",
                            WalletId = 41
                        },
                        new
                        {
                            Id = 122,
                            AccountStatusId = 1,
                            Balance = 6008m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(4041),
                            IBAN = "DE42500105173178734641",
                            WalletId = 41
                        },
                        new
                        {
                            Id = 123,
                            AccountStatusId = 1,
                            Balance = 441m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(4046),
                            IBAN = "DE42500105173178734641",
                            WalletId = 41
                        },
                        new
                        {
                            Id = 124,
                            AccountStatusId = 1,
                            Balance = 6662m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(4052),
                            IBAN = "DE42500105173178734641",
                            WalletId = 42
                        },
                        new
                        {
                            Id = 125,
                            AccountStatusId = 1,
                            Balance = 4002m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(4058),
                            IBAN = "DE42500105173178734641",
                            WalletId = 42
                        },
                        new
                        {
                            Id = 126,
                            AccountStatusId = 1,
                            Balance = 4016m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(4064),
                            IBAN = "DE42500105173178734641",
                            WalletId = 42
                        },
                        new
                        {
                            Id = 127,
                            AccountStatusId = 1,
                            Balance = 349m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(4070),
                            IBAN = "DE42500105173178734641",
                            WalletId = 43
                        },
                        new
                        {
                            Id = 128,
                            AccountStatusId = 1,
                            Balance = 1462m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(4076),
                            IBAN = "DE42500105173178734641",
                            WalletId = 43
                        },
                        new
                        {
                            Id = 129,
                            AccountStatusId = 1,
                            Balance = 817m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(4082),
                            IBAN = "DE42500105173178734641",
                            WalletId = 43
                        },
                        new
                        {
                            Id = 130,
                            AccountStatusId = 1,
                            Balance = 3472m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(4087),
                            IBAN = "DE42500105173178734641",
                            WalletId = 44
                        },
                        new
                        {
                            Id = 131,
                            AccountStatusId = 1,
                            Balance = 271m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(4093),
                            IBAN = "DE42500105173178734641",
                            WalletId = 44
                        },
                        new
                        {
                            Id = 132,
                            AccountStatusId = 1,
                            Balance = 632m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(4099),
                            IBAN = "DE42500105173178734641",
                            WalletId = 44
                        },
                        new
                        {
                            Id = 133,
                            AccountStatusId = 1,
                            Balance = 6402m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(4104),
                            IBAN = "DE42500105173178734641",
                            WalletId = 45
                        },
                        new
                        {
                            Id = 134,
                            AccountStatusId = 1,
                            Balance = 562m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(4110),
                            IBAN = "DE42500105173178734641",
                            WalletId = 45
                        },
                        new
                        {
                            Id = 135,
                            AccountStatusId = 1,
                            Balance = 5185m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(4116),
                            IBAN = "DE42500105173178734641",
                            WalletId = 45
                        },
                        new
                        {
                            Id = 136,
                            AccountStatusId = 1,
                            Balance = 2531m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(4122),
                            IBAN = "DE42500105173178734641",
                            WalletId = 46
                        },
                        new
                        {
                            Id = 137,
                            AccountStatusId = 1,
                            Balance = 775m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(4128),
                            IBAN = "DE42500105173178734641",
                            WalletId = 46
                        },
                        new
                        {
                            Id = 138,
                            AccountStatusId = 1,
                            Balance = 865m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(4134),
                            IBAN = "DE42500105173178734641",
                            WalletId = 46
                        },
                        new
                        {
                            Id = 139,
                            AccountStatusId = 1,
                            Balance = 4893m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(4140),
                            IBAN = "DE42500105173178734641",
                            WalletId = 47
                        },
                        new
                        {
                            Id = 140,
                            AccountStatusId = 1,
                            Balance = 3496m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(4146),
                            IBAN = "DE42500105173178734641",
                            WalletId = 47
                        },
                        new
                        {
                            Id = 141,
                            AccountStatusId = 1,
                            Balance = 9699m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(4151),
                            IBAN = "DE42500105173178734641",
                            WalletId = 47
                        },
                        new
                        {
                            Id = 142,
                            AccountStatusId = 1,
                            Balance = 7369m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(4158),
                            IBAN = "DE42500105173178734641",
                            WalletId = 48
                        },
                        new
                        {
                            Id = 143,
                            AccountStatusId = 1,
                            Balance = 3002m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(4164),
                            IBAN = "DE42500105173178734641",
                            WalletId = 48
                        },
                        new
                        {
                            Id = 144,
                            AccountStatusId = 1,
                            Balance = 4674m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(4170),
                            IBAN = "DE42500105173178734641",
                            WalletId = 48
                        },
                        new
                        {
                            Id = 145,
                            AccountStatusId = 1,
                            Balance = 6277m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(4280),
                            IBAN = "DE42500105173178734641",
                            WalletId = 49
                        },
                        new
                        {
                            Id = 146,
                            AccountStatusId = 1,
                            Balance = 4333m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(4287),
                            IBAN = "DE42500105173178734641",
                            WalletId = 49
                        },
                        new
                        {
                            Id = 147,
                            AccountStatusId = 1,
                            Balance = 9313m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(4293),
                            IBAN = "DE42500105173178734641",
                            WalletId = 49
                        },
                        new
                        {
                            Id = 148,
                            AccountStatusId = 1,
                            Balance = 7877m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(4299),
                            IBAN = "DE42500105173178734641",
                            WalletId = 50
                        },
                        new
                        {
                            Id = 149,
                            AccountStatusId = 1,
                            Balance = 8920m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(4305),
                            IBAN = "DE42500105173178734641",
                            WalletId = 50
                        },
                        new
                        {
                            Id = 150,
                            AccountStatusId = 1,
                            Balance = 6690m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(4310),
                            IBAN = "DE42500105173178734641",
                            WalletId = 50
                        },
                        new
                        {
                            Id = 151,
                            AccountStatusId = 1,
                            Balance = 6277m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(4316),
                            IBAN = "DE42500105173178734641",
                            WalletId = 51
                        },
                        new
                        {
                            Id = 152,
                            AccountStatusId = 1,
                            Balance = 2988m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(4322),
                            IBAN = "DE42500105173178734641",
                            WalletId = 51
                        },
                        new
                        {
                            Id = 153,
                            AccountStatusId = 1,
                            Balance = 5839m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(4328),
                            IBAN = "DE42500105173178734641",
                            WalletId = 51
                        },
                        new
                        {
                            Id = 154,
                            AccountStatusId = 1,
                            Balance = 2733m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(4337),
                            IBAN = "DE42500105173178734641",
                            WalletId = 52
                        },
                        new
                        {
                            Id = 155,
                            AccountStatusId = 1,
                            Balance = 1443m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(4343),
                            IBAN = "DE42500105173178734641",
                            WalletId = 52
                        },
                        new
                        {
                            Id = 156,
                            AccountStatusId = 1,
                            Balance = 9243m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(4349),
                            IBAN = "DE42500105173178734641",
                            WalletId = 52
                        },
                        new
                        {
                            Id = 157,
                            AccountStatusId = 1,
                            Balance = 4900m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(4354),
                            IBAN = "DE42500105173178734641",
                            WalletId = 53
                        },
                        new
                        {
                            Id = 158,
                            AccountStatusId = 1,
                            Balance = 3300m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(4360),
                            IBAN = "DE42500105173178734641",
                            WalletId = 53
                        },
                        new
                        {
                            Id = 159,
                            AccountStatusId = 1,
                            Balance = 440m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(4366),
                            IBAN = "DE42500105173178734641",
                            WalletId = 53
                        },
                        new
                        {
                            Id = 160,
                            AccountStatusId = 1,
                            Balance = 6064m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(4372),
                            IBAN = "DE42500105173178734641",
                            WalletId = 54
                        },
                        new
                        {
                            Id = 161,
                            AccountStatusId = 1,
                            Balance = 3142m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(4378),
                            IBAN = "DE42500105173178734641",
                            WalletId = 54
                        },
                        new
                        {
                            Id = 162,
                            AccountStatusId = 1,
                            Balance = 3465m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(4383),
                            IBAN = "DE42500105173178734641",
                            WalletId = 54
                        },
                        new
                        {
                            Id = 163,
                            AccountStatusId = 1,
                            Balance = 8333m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(4389),
                            IBAN = "DE42500105173178734641",
                            WalletId = 55
                        },
                        new
                        {
                            Id = 164,
                            AccountStatusId = 1,
                            Balance = 5688m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(4395),
                            IBAN = "DE42500105173178734641",
                            WalletId = 55
                        },
                        new
                        {
                            Id = 165,
                            AccountStatusId = 1,
                            Balance = 6074m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(4401),
                            IBAN = "DE42500105173178734641",
                            WalletId = 55
                        },
                        new
                        {
                            Id = 166,
                            AccountStatusId = 1,
                            Balance = 1352m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(4407),
                            IBAN = "DE42500105173178734641",
                            WalletId = 56
                        },
                        new
                        {
                            Id = 167,
                            AccountStatusId = 1,
                            Balance = 2016m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(4414),
                            IBAN = "DE42500105173178734641",
                            WalletId = 56
                        },
                        new
                        {
                            Id = 168,
                            AccountStatusId = 1,
                            Balance = 9744m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(4419),
                            IBAN = "DE42500105173178734641",
                            WalletId = 56
                        },
                        new
                        {
                            Id = 169,
                            AccountStatusId = 1,
                            Balance = 5416m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(4425),
                            IBAN = "DE42500105173178734641",
                            WalletId = 57
                        },
                        new
                        {
                            Id = 170,
                            AccountStatusId = 1,
                            Balance = 7040m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(4431),
                            IBAN = "DE42500105173178734641",
                            WalletId = 57
                        },
                        new
                        {
                            Id = 171,
                            AccountStatusId = 1,
                            Balance = 7645m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(4437),
                            IBAN = "DE42500105173178734641",
                            WalletId = 57
                        },
                        new
                        {
                            Id = 172,
                            AccountStatusId = 1,
                            Balance = 5530m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(4443),
                            IBAN = "DE42500105173178734641",
                            WalletId = 58
                        },
                        new
                        {
                            Id = 173,
                            AccountStatusId = 1,
                            Balance = 2230m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(4448),
                            IBAN = "DE42500105173178734641",
                            WalletId = 58
                        },
                        new
                        {
                            Id = 174,
                            AccountStatusId = 1,
                            Balance = 3636m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(4454),
                            IBAN = "DE42500105173178734641",
                            WalletId = 58
                        },
                        new
                        {
                            Id = 175,
                            AccountStatusId = 1,
                            Balance = 9737m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(4460),
                            IBAN = "DE42500105173178734641",
                            WalletId = 59
                        },
                        new
                        {
                            Id = 176,
                            AccountStatusId = 1,
                            Balance = 2345m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(4466),
                            IBAN = "DE42500105173178734641",
                            WalletId = 59
                        },
                        new
                        {
                            Id = 177,
                            AccountStatusId = 1,
                            Balance = 3006m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(4472),
                            IBAN = "DE42500105173178734641",
                            WalletId = 59
                        },
                        new
                        {
                            Id = 178,
                            AccountStatusId = 1,
                            Balance = 5766m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(4478),
                            IBAN = "DE42500105173178734641",
                            WalletId = 60
                        },
                        new
                        {
                            Id = 179,
                            AccountStatusId = 1,
                            Balance = 386m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(4484),
                            IBAN = "DE42500105173178734641",
                            WalletId = 60
                        },
                        new
                        {
                            Id = 180,
                            AccountStatusId = 1,
                            Balance = 9667m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(4490),
                            IBAN = "DE42500105173178734641",
                            WalletId = 60
                        },
                        new
                        {
                            Id = 181,
                            AccountStatusId = 1,
                            Balance = 4702m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(4496),
                            IBAN = "DE42500105173178734641",
                            WalletId = 61
                        },
                        new
                        {
                            Id = 182,
                            AccountStatusId = 1,
                            Balance = 2471m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(4502),
                            IBAN = "DE42500105173178734641",
                            WalletId = 61
                        },
                        new
                        {
                            Id = 183,
                            AccountStatusId = 1,
                            Balance = 2540m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(4507),
                            IBAN = "DE42500105173178734641",
                            WalletId = 61
                        },
                        new
                        {
                            Id = 184,
                            AccountStatusId = 1,
                            Balance = 4126m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(4513),
                            IBAN = "DE42500105173178734641",
                            WalletId = 62
                        },
                        new
                        {
                            Id = 185,
                            AccountStatusId = 1,
                            Balance = 7193m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(4519),
                            IBAN = "DE42500105173178734641",
                            WalletId = 62
                        },
                        new
                        {
                            Id = 186,
                            AccountStatusId = 1,
                            Balance = 7282m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(4525),
                            IBAN = "DE42500105173178734641",
                            WalletId = 62
                        },
                        new
                        {
                            Id = 187,
                            AccountStatusId = 1,
                            Balance = 4792m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(4531),
                            IBAN = "DE42500105173178734641",
                            WalletId = 63
                        },
                        new
                        {
                            Id = 188,
                            AccountStatusId = 1,
                            Balance = 3669m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(4536),
                            IBAN = "DE42500105173178734641",
                            WalletId = 63
                        },
                        new
                        {
                            Id = 189,
                            AccountStatusId = 1,
                            Balance = 9118m,
                            CurrencyId = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 910, DateTimeKind.Local).AddTicks(4542),
                            IBAN = "DE42500105173178734641",
                            WalletId = 63
                        });
                });

            modelBuilder.Entity("Data.Entities.CountryEntityModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Country");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Bulgaria"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Romania"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Germany"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Greece"
                        },
                        new
                        {
                            Id = 5,
                            Name = "England"
                        },
                        new
                        {
                            Id = 6,
                            Name = "France"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Italy"
                        });
                });

            modelBuilder.Entity("Data.Entities.CurrencyEntityModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Currency");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "BGN"
                        },
                        new
                        {
                            Id = 2,
                            Name = "USD"
                        },
                        new
                        {
                            Id = 3,
                            Name = "GBP"
                        });
                });

            modelBuilder.Entity("Data.Entities.CurrencyExchangeEntityModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FromCurrencyId");

                    b.Property<double>("Rate");

                    b.Property<int>("ToCurrencyId");

                    b.HasKey("Id");

                    b.HasIndex("FromCurrencyId");

                    b.HasIndex("ToCurrencyId");

                    b.ToTable("CurrencyExchange");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FromCurrencyId = 1,
                            Rate = 0.59999999999999998,
                            ToCurrencyId = 2
                        },
                        new
                        {
                            Id = 2,
                            FromCurrencyId = 1,
                            Rate = 0.46000000000000002,
                            ToCurrencyId = 3
                        },
                        new
                        {
                            Id = 3,
                            FromCurrencyId = 3,
                            Rate = 1.29,
                            ToCurrencyId = 2
                        });
                });

            modelBuilder.Entity("Data.Entities.FileDescriptorEntityModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedById");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateEdited");

                    b.Property<int?>("EditedById");

                    b.Property<string>("FileContentType");

                    b.Property<string>("FileExtension");

                    b.Property<int>("FileId");

                    b.Property<string>("FileName");

                    b.Property<string>("UniqueFileName")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("EditedById");

                    b.HasIndex("FileId")
                        .IsUnique();

                    b.ToTable("FileDescriptor");
                });

            modelBuilder.Entity("Data.Entities.FileEntityModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Data");

                    b.HasKey("Id");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("Data.Entities.RegistrantEntityModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired();

                    b.Property<int>("Country")
                        .HasColumnName("CountryId");

                    b.Property<int?>("CreatedById");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateEdited");

                    b.Property<int?>("EditedById");

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("Country");

                    b.HasIndex("CreatedById");

                    b.HasIndex("EditedById");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Registrant");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "ul. Street 42",
                            Country = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 908, DateTimeKind.Local).AddTicks(7256),
                            FirstName = "Preslav",
                            LastName = "Panayotov",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Address = "8-mi Primorski",
                            Country = 3,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 908, DateTimeKind.Local).AddTicks(8545),
                            FirstName = "Stefan",
                            LastName = "Dimitrov",
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            Address = "Liberman 12",
                            Country = 6,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 908, DateTimeKind.Local).AddTicks(8579),
                            FirstName = "Petar",
                            LastName = "Marchev",
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            Address = "Test3",
                            Country = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 908, DateTimeKind.Local).AddTicks(8619),
                            FirstName = "Test1",
                            LastName = "Test2",
                            UserId = 4
                        },
                        new
                        {
                            Id = 5,
                            Address = "Test6",
                            Country = 3,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 908, DateTimeKind.Local).AddTicks(8664),
                            FirstName = "Test4",
                            LastName = "Test5",
                            UserId = 5
                        },
                        new
                        {
                            Id = 6,
                            Address = "Test9",
                            Country = 6,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 908, DateTimeKind.Local).AddTicks(8696),
                            FirstName = "Test7",
                            LastName = "Test8",
                            UserId = 6
                        },
                        new
                        {
                            Id = 7,
                            Address = "Test12",
                            Country = 6,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 908, DateTimeKind.Local).AddTicks(8715),
                            FirstName = "Test10",
                            LastName = "Test11",
                            UserId = 7
                        },
                        new
                        {
                            Id = 8,
                            Address = "Test15",
                            Country = 6,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 908, DateTimeKind.Local).AddTicks(8733),
                            FirstName = "Test13",
                            LastName = "Test14",
                            UserId = 8
                        },
                        new
                        {
                            Id = 9,
                            Address = "Test18",
                            Country = 6,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 908, DateTimeKind.Local).AddTicks(8754),
                            FirstName = "Test16",
                            LastName = "Test17",
                            UserId = 9
                        },
                        new
                        {
                            Id = 10,
                            Address = "Test21",
                            Country = 6,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 908, DateTimeKind.Local).AddTicks(8784),
                            FirstName = "Test19",
                            LastName = "Test20",
                            UserId = 10
                        },
                        new
                        {
                            Id = 11,
                            Address = "Test24",
                            Country = 6,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 908, DateTimeKind.Local).AddTicks(8801),
                            FirstName = "Test22",
                            LastName = "Test23",
                            UserId = 11
                        },
                        new
                        {
                            Id = 12,
                            Address = "Test27",
                            Country = 6,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 908, DateTimeKind.Local).AddTicks(8832),
                            FirstName = "Test25",
                            LastName = "Test26",
                            UserId = 12
                        },
                        new
                        {
                            Id = 13,
                            Address = "Test30",
                            Country = 6,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 908, DateTimeKind.Local).AddTicks(8850),
                            FirstName = "Test28",
                            LastName = "Test29",
                            UserId = 13
                        },
                        new
                        {
                            Id = 14,
                            Address = "Test33",
                            Country = 6,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 908, DateTimeKind.Local).AddTicks(8878),
                            FirstName = "Test31",
                            LastName = "Test32",
                            UserId = 14
                        },
                        new
                        {
                            Id = 15,
                            Address = "Test36",
                            Country = 6,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 908, DateTimeKind.Local).AddTicks(8905),
                            FirstName = "Test34",
                            LastName = "Test35",
                            UserId = 15
                        },
                        new
                        {
                            Id = 16,
                            Address = "Test39",
                            Country = 6,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 908, DateTimeKind.Local).AddTicks(8960),
                            FirstName = "Test37",
                            LastName = "Test38",
                            UserId = 16
                        },
                        new
                        {
                            Id = 17,
                            Address = "Test42",
                            Country = 6,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 908, DateTimeKind.Local).AddTicks(8993),
                            FirstName = "Test40",
                            LastName = "Test41",
                            UserId = 17
                        },
                        new
                        {
                            Id = 18,
                            Address = "Test45",
                            Country = 6,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 908, DateTimeKind.Local).AddTicks(9104),
                            FirstName = "Test43",
                            LastName = "Test44",
                            UserId = 18
                        },
                        new
                        {
                            Id = 19,
                            Address = "Test48",
                            Country = 6,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 908, DateTimeKind.Local).AddTicks(9117),
                            FirstName = "Test46",
                            LastName = "Test47",
                            UserId = 19
                        },
                        new
                        {
                            Id = 20,
                            Address = "Test51",
                            Country = 6,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 908, DateTimeKind.Local).AddTicks(9131),
                            FirstName = "Test49",
                            LastName = "Test50",
                            UserId = 20
                        },
                        new
                        {
                            Id = 21,
                            Address = "Test54",
                            Country = 6,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 908, DateTimeKind.Local).AddTicks(9143),
                            FirstName = "Test52",
                            LastName = "Test53",
                            UserId = 21
                        });
                });

            modelBuilder.Entity("Data.Entities.RoleModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConcurrencyStamp = "ad9053e1-b224-46f1-9af4-acda00408351",
                            Name = "Basic",
                            NormalizedName = "BASIC"
                        },
                        new
                        {
                            Id = 2,
                            ConcurrencyStamp = "66fc5a2f-7ddb-45f0-a380-974c5b8c5d5b",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        });
                });

            modelBuilder.Entity("Data.Entities.StatusEntityModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Status");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Okay"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Blocked"
                        });
                });

            modelBuilder.Entity("Data.Entities.TicketEntityModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedById");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateEdited");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<int?>("EditedById");

                    b.Property<int>("TicketStatusId");

                    b.Property<int>("TicketTypeId");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("EditedById");

                    b.HasIndex("TicketStatusId");

                    b.HasIndex("TicketTypeId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("Data.Entities.TicketMessageEntityModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedById");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateEdited");

                    b.Property<int?>("EditedById");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(1000);

                    b.Property<int>("TicketId");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("EditedById");

                    b.HasIndex("TicketId");

                    b.ToTable("TicketMessages");
                });

            modelBuilder.Entity("Data.Entities.TicketStatusEntityModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("TicketStatus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Open"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Closed"
                        });
                });

            modelBuilder.Entity("Data.Entities.TicketTypeEntityModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("TicketType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Finances"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Wallets"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Other"
                        });
                });

            modelBuilder.Entity("Data.Entities.TransactionEntityModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId");

                    b.Property<decimal>("Amount");

                    b.Property<int?>("CreatedById");

                    b.Property<int>("CurrencyId");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateEdited");

                    b.Property<int?>("EditedById");

                    b.Property<string>("ToIBAN");

                    b.Property<int>("TransactionTypeId");

                    b.Property<string>("UniqueTransactionIdentifier");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("EditedById");

                    b.HasIndex("TransactionTypeId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("Data.Entities.TransactionTypeEntityModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("TransactionType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Debit"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Credit"
                        });
                });

            modelBuilder.Entity("Data.Entities.UserEntityModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<int?>("CreatedById");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateEdited");

                    b.Property<int?>("EditedById");

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("EditedById");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "1b09edb7-888d-4791-a282-616a36586e2e",
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 905, DateTimeKind.Local).AddTicks(3760),
                            Email = "preslav.miroslavov@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "PRESLAV.MIROSLAVOV@GMAIL.COM",
                            NormalizedUserName = "PRESLAVPANAIOTOV",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "PreslavPanaiotov"
                        },
                        new
                        {
                            Id = 2,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "ad892afb-a761-4cfa-a6df-b5807ac252e7",
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 908, DateTimeKind.Local).AddTicks(357),
                            Email = "stefan.dimitrov@abv.bg",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "StefanDimitrov"
                        },
                        new
                        {
                            Id = 3,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "aa01670a-713a-4641-8836-c6339d4aab36",
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 908, DateTimeKind.Local).AddTicks(390),
                            Email = "petar.marchev@mail.bg",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "PetarMarchev"
                        },
                        new
                        {
                            Id = 4,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "2b4fea34-43fc-48f7-babc-a863ad0d45c3",
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 908, DateTimeKind.Local).AddTicks(434),
                            Email = "test1@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = 5,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "ad688d05-23a1-4f90-bf8c-e9ba399af16d",
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 908, DateTimeKind.Local).AddTicks(449),
                            Email = "test2@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = 6,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "627e4c11-1ed5-4c8b-acd8-6b0f65b70f5d",
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 908, DateTimeKind.Local).AddTicks(479),
                            Email = "test3@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = 7,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "2fefb529-da64-4372-9a0f-aaf5169e5bad",
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 908, DateTimeKind.Local).AddTicks(492),
                            Email = "test4@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = 8,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "7f78786f-2377-451f-af76-ec27bf5157b1",
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 908, DateTimeKind.Local).AddTicks(504),
                            Email = "test5@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = 9,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c4bf2bf1-8fd5-4a5b-920d-91fdcc5bc0c6",
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 908, DateTimeKind.Local).AddTicks(518),
                            Email = "test6@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = 10,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "543a0168-02b2-44aa-b361-5d7fdb8cbcf9",
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 908, DateTimeKind.Local).AddTicks(530),
                            Email = "test7@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = 11,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "cb330363-db2f-4a15-b368-06185f530353",
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 908, DateTimeKind.Local).AddTicks(542),
                            Email = "test8@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = 12,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "7fe514c5-bbf1-492e-9daa-a981cb58aca4",
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 908, DateTimeKind.Local).AddTicks(555),
                            Email = "test9@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = 13,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "114706b5-93d7-4fd9-abaf-c5fe6f2dc310",
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 908, DateTimeKind.Local).AddTicks(569),
                            Email = "test10@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = 14,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "2f18738e-1c52-4b58-80c2-a9f9f79e5baf",
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 908, DateTimeKind.Local).AddTicks(587),
                            Email = "test11@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = 15,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c52eb89d-40aa-4675-87c3-4115bae0d44f",
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 908, DateTimeKind.Local).AddTicks(600),
                            Email = "test12@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = 16,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "b6b95d07-6dbf-4be2-9c79-f9cd4e6a0f17",
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 908, DateTimeKind.Local).AddTicks(765),
                            Email = "test13@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = 17,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "6d220b6b-6eb7-4c91-8f27-829e121513c1",
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 908, DateTimeKind.Local).AddTicks(778),
                            Email = "test14@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = 18,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8936f920-9b9f-41ab-b067-e8873a40e629",
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 908, DateTimeKind.Local).AddTicks(790),
                            Email = "test15@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = 19,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "b3f582ed-603e-4b0c-9022-9cc9e445947e",
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 908, DateTimeKind.Local).AddTicks(803),
                            Email = "test16@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = 20,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "bdebf651-137a-4430-aaab-a09c332faf31",
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 908, DateTimeKind.Local).AddTicks(815),
                            Email = "test17@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = 21,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "e11c3a1d-c747-4cf2-8158-a20ebf1beb3e",
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 908, DateTimeKind.Local).AddTicks(828),
                            Email = "test18@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false
                        });
                });

            modelBuilder.Entity("Data.Entities.WalletEntityModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedById");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateEdited");

                    b.Property<int?>("EditedById");

                    b.Property<bool>("IsVerified");

                    b.Property<int>("Number");

                    b.Property<int>("RegistrantId");

                    b.Property<int>("WalletStatusId")
                        .HasColumnName("WalletStatusId");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("EditedById");

                    b.HasIndex("RegistrantId");

                    b.HasIndex("WalletStatusId");

                    b.ToTable("Wallet");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 909, DateTimeKind.Local).AddTicks(4287),
                            IsVerified = true,
                            Number = 4188,
                            RegistrantId = 1,
                            WalletStatusId = 1
                        },
                        new
                        {
                            Id = 2,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 909, DateTimeKind.Local).AddTicks(5187),
                            IsVerified = false,
                            Number = 948,
                            RegistrantId = 1,
                            WalletStatusId = 1
                        },
                        new
                        {
                            Id = 3,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 909, DateTimeKind.Local).AddTicks(5212),
                            IsVerified = false,
                            Number = 9809,
                            RegistrantId = 1,
                            WalletStatusId = 1
                        },
                        new
                        {
                            Id = 4,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 909, DateTimeKind.Local).AddTicks(5218),
                            IsVerified = true,
                            Number = 9458,
                            RegistrantId = 2,
                            WalletStatusId = 2
                        },
                        new
                        {
                            Id = 5,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 909, DateTimeKind.Local).AddTicks(5223),
                            IsVerified = true,
                            Number = 1889,
                            RegistrantId = 2,
                            WalletStatusId = 1
                        },
                        new
                        {
                            Id = 6,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 909, DateTimeKind.Local).AddTicks(5228),
                            IsVerified = false,
                            Number = 6703,
                            RegistrantId = 2,
                            WalletStatusId = 2
                        },
                        new
                        {
                            Id = 7,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 909, DateTimeKind.Local).AddTicks(5234),
                            IsVerified = true,
                            Number = 9890,
                            RegistrantId = 3,
                            WalletStatusId = 1
                        },
                        new
                        {
                            Id = 8,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 909, DateTimeKind.Local).AddTicks(5239),
                            IsVerified = false,
                            Number = 1018,
                            RegistrantId = 3,
                            WalletStatusId = 1
                        },
                        new
                        {
                            Id = 9,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 909, DateTimeKind.Local).AddTicks(5245),
                            IsVerified = true,
                            Number = 9066,
                            RegistrantId = 3,
                            WalletStatusId = 2
                        },
                        new
                        {
                            Id = 10,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 909, DateTimeKind.Local).AddTicks(5255),
                            IsVerified = true,
                            Number = 7929,
                            RegistrantId = 4,
                            WalletStatusId = 1
                        },
                        new
                        {
                            Id = 11,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 909, DateTimeKind.Local).AddTicks(5261),
                            IsVerified = false,
                            Number = 9975,
                            RegistrantId = 4,
                            WalletStatusId = 1
                        },
                        new
                        {
                            Id = 12,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 909, DateTimeKind.Local).AddTicks(5266),
                            IsVerified = false,
                            Number = 1258,
                            RegistrantId = 4,
                            WalletStatusId = 1
                        },
                        new
                        {
                            Id = 13,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 909, DateTimeKind.Local).AddTicks(5272),
                            IsVerified = true,
                            Number = 7187,
                            RegistrantId = 5,
                            WalletStatusId = 2
                        },
                        new
                        {
                            Id = 14,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 909, DateTimeKind.Local).AddTicks(5278),
                            IsVerified = true,
                            Number = 3965,
                            RegistrantId = 5,
                            WalletStatusId = 1
                        },
                        new
                        {
                            Id = 15,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 909, DateTimeKind.Local).AddTicks(5285),
                            IsVerified = false,
                            Number = 7359,
                            RegistrantId = 5,
                            WalletStatusId = 2
                        },
                        new
                        {
                            Id = 16,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 909, DateTimeKind.Local).AddTicks(5291),
                            IsVerified = true,
                            Number = 1113,
                            RegistrantId = 6,
                            WalletStatusId = 1
                        },
                        new
                        {
                            Id = 17,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 909, DateTimeKind.Local).AddTicks(5297),
                            IsVerified = false,
                            Number = 2394,
                            RegistrantId = 6,
                            WalletStatusId = 1
                        },
                        new
                        {
                            Id = 18,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 909, DateTimeKind.Local).AddTicks(5302),
                            IsVerified = true,
                            Number = 3505,
                            RegistrantId = 6,
                            WalletStatusId = 2
                        },
                        new
                        {
                            Id = 19,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 909, DateTimeKind.Local).AddTicks(5308),
                            IsVerified = true,
                            Number = 4983,
                            RegistrantId = 7,
                            WalletStatusId = 2
                        },
                        new
                        {
                            Id = 20,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 909, DateTimeKind.Local).AddTicks(5314),
                            IsVerified = true,
                            Number = 8250,
                            RegistrantId = 7,
                            WalletStatusId = 2
                        },
                        new
                        {
                            Id = 21,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 909, DateTimeKind.Local).AddTicks(5320),
                            IsVerified = true,
                            Number = 9146,
                            RegistrantId = 7,
                            WalletStatusId = 2
                        },
                        new
                        {
                            Id = 22,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 909, DateTimeKind.Local).AddTicks(5326),
                            IsVerified = true,
                            Number = 3321,
                            RegistrantId = 8,
                            WalletStatusId = 2
                        },
                        new
                        {
                            Id = 23,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 909, DateTimeKind.Local).AddTicks(5331),
                            IsVerified = true,
                            Number = 3702,
                            RegistrantId = 8,
                            WalletStatusId = 2
                        },
                        new
                        {
                            Id = 24,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 909, DateTimeKind.Local).AddTicks(5337),
                            IsVerified = true,
                            Number = 1462,
                            RegistrantId = 8,
                            WalletStatusId = 2
                        },
                        new
                        {
                            Id = 25,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 909, DateTimeKind.Local).AddTicks(5342),
                            IsVerified = true,
                            Number = 9829,
                            RegistrantId = 9,
                            WalletStatusId = 2
                        },
                        new
                        {
                            Id = 26,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 909, DateTimeKind.Local).AddTicks(5348),
                            IsVerified = true,
                            Number = 5702,
                            RegistrantId = 9,
                            WalletStatusId = 2
                        },
                        new
                        {
                            Id = 27,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 909, DateTimeKind.Local).AddTicks(5353),
                            IsVerified = true,
                            Number = 9158,
                            RegistrantId = 9,
                            WalletStatusId = 2
                        },
                        new
                        {
                            Id = 28,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 909, DateTimeKind.Local).AddTicks(5363),
                            IsVerified = true,
                            Number = 6406,
                            RegistrantId = 10,
                            WalletStatusId = 2
                        },
                        new
                        {
                            Id = 29,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 909, DateTimeKind.Local).AddTicks(5368),
                            IsVerified = true,
                            Number = 4291,
                            RegistrantId = 10,
                            WalletStatusId = 2
                        },
                        new
                        {
                            Id = 30,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 909, DateTimeKind.Local).AddTicks(5374),
                            IsVerified = true,
                            Number = 7926,
                            RegistrantId = 10,
                            WalletStatusId = 2
                        },
                        new
                        {
                            Id = 31,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 909, DateTimeKind.Local).AddTicks(5379),
                            IsVerified = true,
                            Number = 9104,
                            RegistrantId = 11,
                            WalletStatusId = 2
                        },
                        new
                        {
                            Id = 32,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 909, DateTimeKind.Local).AddTicks(5385),
                            IsVerified = true,
                            Number = 1601,
                            RegistrantId = 11,
                            WalletStatusId = 2
                        },
                        new
                        {
                            Id = 33,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 909, DateTimeKind.Local).AddTicks(5391),
                            IsVerified = true,
                            Number = 1699,
                            RegistrantId = 11,
                            WalletStatusId = 2
                        },
                        new
                        {
                            Id = 34,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 909, DateTimeKind.Local).AddTicks(5397),
                            IsVerified = true,
                            Number = 5748,
                            RegistrantId = 12,
                            WalletStatusId = 2
                        },
                        new
                        {
                            Id = 35,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 909, DateTimeKind.Local).AddTicks(5402),
                            IsVerified = true,
                            Number = 6242,
                            RegistrantId = 12,
                            WalletStatusId = 2
                        },
                        new
                        {
                            Id = 36,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 909, DateTimeKind.Local).AddTicks(5408),
                            IsVerified = true,
                            Number = 9386,
                            RegistrantId = 12,
                            WalletStatusId = 2
                        },
                        new
                        {
                            Id = 37,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 909, DateTimeKind.Local).AddTicks(5414),
                            IsVerified = true,
                            Number = 6650,
                            RegistrantId = 13,
                            WalletStatusId = 2
                        },
                        new
                        {
                            Id = 38,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 909, DateTimeKind.Local).AddTicks(5419),
                            IsVerified = true,
                            Number = 2623,
                            RegistrantId = 13,
                            WalletStatusId = 2
                        },
                        new
                        {
                            Id = 39,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 909, DateTimeKind.Local).AddTicks(5425),
                            IsVerified = true,
                            Number = 2022,
                            RegistrantId = 13,
                            WalletStatusId = 2
                        },
                        new
                        {
                            Id = 40,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 909, DateTimeKind.Local).AddTicks(5431),
                            IsVerified = true,
                            Number = 5414,
                            RegistrantId = 14,
                            WalletStatusId = 2
                        },
                        new
                        {
                            Id = 41,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 909, DateTimeKind.Local).AddTicks(5436),
                            IsVerified = true,
                            Number = 2906,
                            RegistrantId = 14,
                            WalletStatusId = 2
                        },
                        new
                        {
                            Id = 42,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 909, DateTimeKind.Local).AddTicks(5442),
                            IsVerified = true,
                            Number = 5304,
                            RegistrantId = 14,
                            WalletStatusId = 2
                        },
                        new
                        {
                            Id = 43,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 909, DateTimeKind.Local).AddTicks(5448),
                            IsVerified = true,
                            Number = 8383,
                            RegistrantId = 15,
                            WalletStatusId = 2
                        },
                        new
                        {
                            Id = 44,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 909, DateTimeKind.Local).AddTicks(5454),
                            IsVerified = true,
                            Number = 1713,
                            RegistrantId = 15,
                            WalletStatusId = 2
                        },
                        new
                        {
                            Id = 45,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 909, DateTimeKind.Local).AddTicks(5460),
                            IsVerified = true,
                            Number = 4081,
                            RegistrantId = 15,
                            WalletStatusId = 2
                        },
                        new
                        {
                            Id = 46,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 909, DateTimeKind.Local).AddTicks(5539),
                            IsVerified = true,
                            Number = 4217,
                            RegistrantId = 16,
                            WalletStatusId = 2
                        },
                        new
                        {
                            Id = 47,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 909, DateTimeKind.Local).AddTicks(5547),
                            IsVerified = true,
                            Number = 8049,
                            RegistrantId = 16,
                            WalletStatusId = 2
                        },
                        new
                        {
                            Id = 48,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 909, DateTimeKind.Local).AddTicks(5553),
                            IsVerified = true,
                            Number = 6076,
                            RegistrantId = 16,
                            WalletStatusId = 2
                        },
                        new
                        {
                            Id = 49,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 909, DateTimeKind.Local).AddTicks(5559),
                            IsVerified = true,
                            Number = 9284,
                            RegistrantId = 17,
                            WalletStatusId = 2
                        },
                        new
                        {
                            Id = 50,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 909, DateTimeKind.Local).AddTicks(5564),
                            IsVerified = true,
                            Number = 8893,
                            RegistrantId = 17,
                            WalletStatusId = 2
                        },
                        new
                        {
                            Id = 51,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 909, DateTimeKind.Local).AddTicks(5570),
                            IsVerified = true,
                            Number = 6849,
                            RegistrantId = 17,
                            WalletStatusId = 2
                        },
                        new
                        {
                            Id = 52,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 909, DateTimeKind.Local).AddTicks(5577),
                            IsVerified = true,
                            Number = 5757,
                            RegistrantId = 18,
                            WalletStatusId = 2
                        },
                        new
                        {
                            Id = 53,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 909, DateTimeKind.Local).AddTicks(5583),
                            IsVerified = true,
                            Number = 8513,
                            RegistrantId = 18,
                            WalletStatusId = 2
                        },
                        new
                        {
                            Id = 54,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 909, DateTimeKind.Local).AddTicks(5588),
                            IsVerified = true,
                            Number = 6304,
                            RegistrantId = 18,
                            WalletStatusId = 2
                        },
                        new
                        {
                            Id = 55,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 909, DateTimeKind.Local).AddTicks(5594),
                            IsVerified = true,
                            Number = 1177,
                            RegistrantId = 19,
                            WalletStatusId = 2
                        },
                        new
                        {
                            Id = 56,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 909, DateTimeKind.Local).AddTicks(5600),
                            IsVerified = true,
                            Number = 1467,
                            RegistrantId = 19,
                            WalletStatusId = 2
                        },
                        new
                        {
                            Id = 57,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 909, DateTimeKind.Local).AddTicks(5606),
                            IsVerified = true,
                            Number = 3332,
                            RegistrantId = 19,
                            WalletStatusId = 2
                        },
                        new
                        {
                            Id = 58,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 909, DateTimeKind.Local).AddTicks(5611),
                            IsVerified = true,
                            Number = 1623,
                            RegistrantId = 20,
                            WalletStatusId = 2
                        },
                        new
                        {
                            Id = 59,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 909, DateTimeKind.Local).AddTicks(5617),
                            IsVerified = true,
                            Number = 5329,
                            RegistrantId = 20,
                            WalletStatusId = 2
                        },
                        new
                        {
                            Id = 60,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 909, DateTimeKind.Local).AddTicks(5623),
                            IsVerified = true,
                            Number = 9198,
                            RegistrantId = 20,
                            WalletStatusId = 2
                        },
                        new
                        {
                            Id = 61,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 909, DateTimeKind.Local).AddTicks(5628),
                            IsVerified = true,
                            Number = 4477,
                            RegistrantId = 21,
                            WalletStatusId = 2
                        },
                        new
                        {
                            Id = 62,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 909, DateTimeKind.Local).AddTicks(5634),
                            IsVerified = true,
                            Number = 5205,
                            RegistrantId = 21,
                            WalletStatusId = 2
                        },
                        new
                        {
                            Id = 63,
                            DateCreated = new DateTime(2020, 10, 4, 17, 37, 20, 909, DateTimeKind.Local).AddTicks(5641),
                            IsVerified = true,
                            Number = 6061,
                            RegistrantId = 21,
                            WalletStatusId = 2
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<int>("RoleId");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider");

                    b.Property<string>("ProviderKey");

                    b.Property<string>("ProviderDisplayName");

                    b.Property<int>("UserId");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId");

                    b.Property<int>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId");

                    b.Property<string>("LoginProvider");

                    b.Property<string>("Name");

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Data.Entities.AccountEntityModel", b =>
                {
                    b.HasOne("Data.Entities.StatusEntityModel", "Status")
                        .WithMany()
                        .HasForeignKey("AccountStatusId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Data.Entities.UserEntityModel", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Data.Entities.CurrencyEntityModel", "CurrencyRelation")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Data.Entities.UserEntityModel", "EditedByUser")
                        .WithMany()
                        .HasForeignKey("EditedById");

                    b.HasOne("Data.Entities.WalletEntityModel", "Wallet")
                        .WithMany("Accounts")
                        .HasForeignKey("WalletId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Data.Entities.CurrencyExchangeEntityModel", b =>
                {
                    b.HasOne("Data.Entities.CurrencyEntityModel", "FromCurrency")
                        .WithMany()
                        .HasForeignKey("FromCurrencyId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Data.Entities.CurrencyEntityModel", "ToCurrency")
                        .WithMany()
                        .HasForeignKey("ToCurrencyId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Data.Entities.FileDescriptorEntityModel", b =>
                {
                    b.HasOne("Data.Entities.UserEntityModel", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Data.Entities.UserEntityModel", "EditedByUser")
                        .WithMany()
                        .HasForeignKey("EditedById");

                    b.HasOne("Data.Entities.FileEntityModel", "File")
                        .WithOne("Descriptor")
                        .HasForeignKey("Data.Entities.FileDescriptorEntityModel", "FileId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Data.Entities.RegistrantEntityModel", b =>
                {
                    b.HasOne("Data.Entities.CountryEntityModel", "CountryRelation")
                        .WithMany()
                        .HasForeignKey("Country")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Data.Entities.UserEntityModel", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Data.Entities.UserEntityModel", "EditedByUser")
                        .WithMany()
                        .HasForeignKey("EditedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Data.Entities.UserEntityModel", "User")
                        .WithOne("Registrant")
                        .HasForeignKey("Data.Entities.RegistrantEntityModel", "UserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Data.Entities.TicketEntityModel", b =>
                {
                    b.HasOne("Data.Entities.UserEntityModel", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Data.Entities.UserEntityModel", "EditedByUser")
                        .WithMany()
                        .HasForeignKey("EditedById");

                    b.HasOne("Data.Entities.TicketStatusEntityModel", "TicketStatus")
                        .WithMany()
                        .HasForeignKey("TicketStatusId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Data.Entities.TicketTypeEntityModel", "TicketType")
                        .WithMany()
                        .HasForeignKey("TicketTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Data.Entities.TicketMessageEntityModel", b =>
                {
                    b.HasOne("Data.Entities.UserEntityModel", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Data.Entities.UserEntityModel", "EditedByUser")
                        .WithMany()
                        .HasForeignKey("EditedById");

                    b.HasOne("Data.Entities.TicketEntityModel", "Ticket")
                        .WithMany("MessageHistory")
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Data.Entities.TransactionEntityModel", b =>
                {
                    b.HasOne("Data.Entities.AccountEntityModel", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Data.Entities.UserEntityModel", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Data.Entities.CurrencyEntityModel", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Data.Entities.UserEntityModel", "EditedByUser")
                        .WithMany()
                        .HasForeignKey("EditedById");

                    b.HasOne("Data.Entities.TransactionTypeEntityModel", "TransactionType")
                        .WithMany()
                        .HasForeignKey("TransactionTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Data.Entities.UserEntityModel", b =>
                {
                    b.HasOne("Data.Entities.UserEntityModel", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Data.Entities.UserEntityModel", "EditedByUser")
                        .WithMany()
                        .HasForeignKey("EditedById")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Data.Entities.WalletEntityModel", b =>
                {
                    b.HasOne("Data.Entities.UserEntityModel", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Data.Entities.UserEntityModel", "EditedByUser")
                        .WithMany()
                        .HasForeignKey("EditedById");

                    b.HasOne("Data.Entities.RegistrantEntityModel", "Registrant")
                        .WithMany("Wallets")
                        .HasForeignKey("RegistrantId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Data.Entities.StatusEntityModel", "Status")
                        .WithMany()
                        .HasForeignKey("WalletStatusId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Data.Entities.RoleModel")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("Data.Entities.UserEntityModel")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("Data.Entities.UserEntityModel")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Data.Entities.RoleModel")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Data.Entities.UserEntityModel")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("Data.Entities.UserEntityModel")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
