@model AllWalletsWithSumsViewModel

@using Mini_Bank.Models.ViewModels;

@{
    var temp = Json.Serialize(Model.Filters);
    string from = null, to = null;
    string prevFilters = null;
    if (!temp.ToString().Equals("null"))
    {
        prevFilters = temp.ToString();
    }

    if (Model.Filters != null)
    {
        from = Model.Filters.RegisteredFrom;
        to = Model.Filters.RegisteredTo;
    }
}

<form method="get" autocomplete="off" asp-action="AllWalletsWithSums" class="test">
    <div class="form-group">
        <label asp-for="@Model.Countries.FirstOrDefault().Name" class="control-label">Filter by Countries :</label>
        <select asp-for="@Model.Filters.Countries" asp-items="@(new SelectList(Model.Countries, "Name",  "Name"))" class="form-control  js-multiple" multiple="multiple"></select>
    </div>
    <div class="input-daterange input-group" id="datepicker">
        <input asp-for="@Model.Filters.RegisteredFrom" type="text" placeholder="@from" class="input-sm form-control" />
        <span class="input-group-addon">to</span>
        <input asp-for="@Model.Filters.RegisteredTo" type="text" placeholder="@to" class="input-sm form-control" />
    </div>
    <div class="form-group mt-3">
        <input type="submit" value="Filter" class="btn btn-primary" />
        <a class="btn btn-light" asp-action="AllWalletsWithSums">Reset</a>
    </div>
</form>

@Html.PagedListPager(Model.Data, pageIndex => Url.Action("AllWalletsWithSums", new { pageIndex, sortBy = Model.CurrentSort, prevFilters = prevFilters }),
                                                    new X.PagedList.Mvc.Common.PagedListRenderOptionsBase
                                                    {
                                                        PageClasses = new string[] { "page-link" },
                                                        LiElementClasses = new string[] { "page-item" },
                                                        EllipsesElementClass = "page-link"
                                                    })
<div>
    <table class="table table-hover">
        <thead>
            <tr>
                <th>
                    <a asp-action="AllWalletsWithSums" asp-route-pageIndex="@Model.CurrentPage" asp-route-sortBy="@ViewBag.IdSort" asp-route-prevFilters="@prevFilters">
                        <label asp-for="@Model.Data.FirstOrDefault().Id"></label>
                    </a>
                </th>
                <th>
                    <a asp-action="AllWalletsWithSums" asp-route-pageIndex="@Model.CurrentPage" asp-route-sortBy="@ViewBag.ClientNameSort" asp-route-prevFilters="@prevFilters">
                        <label asp-for="@Model.Data.FirstOrDefault().ClientName"></label>
                    </a>
                </th>
                <th>
                    <a asp-action="AllWalletsWithSums" asp-route-pageIndex="@Model.CurrentPage" asp-route-sortBy="@ViewBag.ClientCountrySort" asp-route-prevFilters="@prevFilters">
                        <label asp-for="@Model.Data.FirstOrDefault().ClientCountry"></label>
                    </a>
                </th>
                <th>
                    <a asp-action="AllWalletsWithSums" asp-route-pageIndex="@Model.CurrentPage" asp-route-sortBy="@ViewBag.BalanceSort" asp-route-prevFilters="@prevFilters">
                        <label asp-for="@Model.Data.FirstOrDefault().Balance"></label>
                    </a>
                </th>
                <th>
                    <a asp-action="AllWalletsWithSums" asp-route-pageIndex="@Model.CurrentPage" asp-route-sortBy="@ViewBag.CurrencySort" asp-route-prevFilters="@prevFilters">
                        <label asp-for="@Model.Data.FirstOrDefault().Currency"></label>
                    </a>
                </th>
                <th>
                    <a asp-action="AllWalletsWithSums" asp-route-pageIndex="@Model.CurrentPage" asp-route-sortBy="@ViewBag.CurrencySort" asp-route-prevFilters="@prevFilters">
                        <label asp-for="@Model.Data.FirstOrDefault().Date"></label>
                    </a>
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Data)
            {
                <tr>
                    <td>
                        @item.Id
                    </td>
                    <td>
                        @item.ClientName
                    </td>
                    <td>
                        @item.ClientCountry
                    </td>
                    <td>
                        @item.Balance.ToString("N")
                    </td>
                    <td>
                        @item.Currency
                    </td>
                    <td>
                        @item.Date
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
@Html.PagedListPager(Model.Data, pageIndex => Url.Action("AllWalletsWithSums", new { pageIndex, sortBy = Model.CurrentSort, prevFilters = prevFilters }),
                                                    new X.PagedList.Mvc.Common.PagedListRenderOptionsBase
                                                    {
                                                        PageClasses = new string[] { "page-link" },
                                                        LiElementClasses = new string[] { "page-item" },
                                                        EllipsesElementClass = "page-link"
                                                    })
@section Scripts{
    <script>
        $(document).ready(function () {
            $('.js-multiple').select2();
        });
    </script>
    <script>
        $('.input-daterange input').each(function () {
            $(this).datepicker('clearDates');
        });
    </script>
    <script>
        $('.input-daterange').datepicker({
        });
    </script>

}